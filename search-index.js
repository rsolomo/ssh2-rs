var searchIndex = {};
searchIndex['ssh2'] = {"items":[[0,"","ssh2","Rust bindings to libssh2, an SSH client library."],[1,"Agent","","A structure representing a connection to an SSH agent."],[1,"Identities","","An iterator over the identities found in an SSH agent."],[1,"PublicKey","","A public key which is extracted from an SSH agent."],[1,"Channel","","A channel represents a portion of an SSH connection on which data can be\nread and written."],[1,"ExitSignal","","Data received from when a program exits with a signal."],[11,"exit_signal","","The exit signal received, if the program did not exit cleanly. Does not\ncontain a SIG prefix",0],[11,"error_message","","Error message provided by the remote server (if any)",0],[11,"lang_tag","","Language tag provided by the remote server (if any)",0],[1,"ReadWindow","","Description of the read window as returned by `Channel::read_window`"],[11,"remaining","","The number of bytes which the remote end may send without overflowing\nthe window limit.",1],[11,"available","","The number of bytes actually available to be read.",1],[11,"window_size_initial","","The window_size_initial as defined by the channel open request",1],[1,"WriteWindow","","Description of the write window as returned by `Channel::write_window`"],[11,"remaining","","The number of bytes which may be safely written on the channel without\nblocking.",2],[11,"window_size_initial","","The window_size_initial as defined by the channel open request",2],[1,"Error","","Representation of an error that can occur within libssh2"],[1,"KnownHosts","","A set of known hosts which can be used to verify the identity of a remote\nserver."],[1,"Hosts","","Iterator over the hosts in a `KnownHosts` structure."],[1,"Host","","Structure representing a known host as part of a `KnownHosts` structure."],[1,"Listener","","A listener represents a forwarding port from the remote server."],[1,"Session","","An SSH session, typically representing one TCP connection."],[1,"Sftp","","A handle to a remote filesystem over SFTP."],[1,"OpenFlags","","Options that can be used to configure how a file is opened"],[1,"File","","A file handle to an SFTP connection."],[1,"FileStat","","Metadata information about a remote file."],[11,"size","","File size, in bytes of the file.",3],[11,"uid","","Owner ID of the file",3],[11,"gid","","Owning group of the file",3],[11,"perm","","Permissions (mode) of the file",3],[11,"atime","","Last access time of the file",3],[11,"mtime","","Last modification time of the file",3],[1,"RenameFlags","","Options to `Sftp::rename`"],[2,"OpenType","","How to open a file handle with libssh2."],[12,"File","","Specify that a file shoud be opened.",4],[12,"Dir","","Specify that a directory should be opened.",4],[2,"DisconnectCode","",""],[12,"HostNotAllowedToConnect","","",5],[12,"ProtocolError","","",5],[12,"KeyExchangeFailed","","",5],[12,"Reserved","","",5],[12,"MacError","","",5],[12,"CompressionError","","",5],[12,"ServiceNotAvailable","","",5],[12,"ProtocolVersionNotSupported","","",5],[12,"HostKeyNotVerifiable","","",5],[12,"ConnectionLost","","",5],[12,"ByApplication","","",5],[12,"TooManyConnections","","",5],[12,"AuthCancelledByUser","","",5],[12,"NoMoreAuthMethodsAvailable","","",5],[12,"IllegalUserName","","",5],[2,"SessionFlag","","Flags to be enabled/disabled on a Session"],[12,"SigPipe","","If set, libssh2 will not attempt to block SIGPIPEs but will let them\ntrigger from the underlying socket layer.",6],[12,"Compress","","If set - before the connection negotiation is performed - libssh2 will\ntry to negotiate compression enabling for this connection. By default\nlibssh2 will not attempt to use compression.",6],[2,"HostKeyType","",""],[12,"Unknown","","",7],[12,"Rsa","","",7],[12,"Dss","","",7],[2,"MethodType","",""],[12,"Kex","","",8],[12,"HostKey","","",8],[12,"CryptCs","","",8],[12,"CryptSc","","",8],[12,"MacCs","","",8],[12,"MacSc","","",8],[12,"CompCs","","",8],[12,"CompSc","","",8],[12,"LangCs","","",8],[12,"LangSc","","",8],[2,"HashType","",""],[12,"Md5","","",9],[12,"Sha1","","",9],[2,"KnownHostFileKind","",""],[12,"OpenSSH","","",10],[2,"CheckResult","","Possible results of a call to `KnownHosts::check`"],[12,"Match","","Hosts and keys match",11],[12,"Mismatch","","Host was found, but the keys didn't match!",11],[12,"NotFound","","No host match was found",11],[12,"Failure","","Something prevented the check to be made",11],[2,"KnownHostKeyFormat","",""],[12,"Rsa1","","",12],[12,"SshRsa","","",12],[12,"SshDss","","",12],[3,"init","","Initialize the libssh2 library."],[10,"from_raw","","Wraps a raw pointer in a new Agent structure tied to the lifetime of the\ngiven session.",13],[10,"connect","","Connect to an ssh-agent running on the system.",13],[10,"disconnect","","Close a connection to an ssh-agent.",13],[10,"list_identities","","Request an ssh-agent to list of public keys, and stores them in the\ninternal collection of the handle.",13],[10,"identities","","Get an iterator over the identities of this agent.",13],[10,"userauth","","Attempt public key authentication with the help of ssh-agent.",13],[10,"drop","","",13],[10,"next","","",14],[10,"from_raw","","Creates a new public key from its raw counterpart.",15],[10,"blob","","Return the data of this public key.",15],[10,"comment","","Returns the comment in a printable format",15],[10,"raw","","Gain access to the underlying raw pointer",15],[10,"from_raw","","Wraps a raw pointer in a new Channel structure tied to the lifetime of the\ngiven session.",16],[10,"close","","Close an active data channel.",16],[10,"wait_close","","Enter a temporary blocking state until the remote host closes the named\nchannel.",16],[10,"wait_eof","","Wait for the remote end to acknowledge an EOF request.",16],[10,"eof","","Check if the remote host has sent an EOF status for the selected stream.",16],[10,"process_startup","","Initiate a request on a session type channel.",16],[10,"request_pty","","Request a PTY on an established channel.",16],[10,"request_pty_size","","Request a PTY of a specified size",16],[10,"exec","","Execute a command",16],[10,"shell","","Start a shell",16],[10,"subsystem","","Request a subsystem be started",16],[10,"flush_stream","","Flush the read buffer for a given channel instance.",16],[10,"flush_stderr","","Flush the stderr buffers.",16],[10,"write_stream","","Write data to a channel stream.",16],[10,"write_stderr","","Write data to the channel stderr stream.",16],[10,"exit_signal","","Get the remote exit signal.",16],[10,"exit_status","","Returns the exit code raised by the process running on the remote host\nat the other end of the named channel.",16],[10,"read_stream","","Attempt to read data from an active channel stream.",16],[10,"read_stderr","","Read from the stderr stream .",16],[10,"setenv","","Set an environment variable in the remote channel's process space.",16],[10,"send_eof","","Tell the remote host that no further data will be sent on the specified\nchannel.",16],[10,"read_window","","Check the status of the read window.",16],[10,"write_window","","Check the status of the write window.",16],[10,"adjust_receive_window","","Adjust the receive window for a channel by adjustment bytes.",16],[10,"limit_read","","Artificially limit the number of bytes that will be read from this\nchannel.",16],[10,"write","","",16],[10,"flush","","",16],[10,"read","","",16],[10,"drop","","",16],[10,"last_error","","Generate the last error that occurred for a `Session`.",17],[10,"new","","Create a new error for the given code and message",17],[10,"eof","","Generate an error that represents EOF",17],[10,"from_errno","","Construct an error from an error code from libssh2",17],[10,"message","","Get the message corresponding to this error",17],[10,"code","","Return the code for this error",17],[10,"fmt","","",17],[10,"from_raw","","Wraps a raw pointer in a new KnownHosts structure tied to the lifetime\nof the given session.",18],[10,"read_file","","Reads a collection of known hosts from a specified file and adds them to\nthe collection of known hosts.",18],[10,"read_str","","Read a line as if it were from a known hosts file.",18],[10,"write_file","","Writes all the known hosts to the specified file using the specified\nfile format.",18],[10,"write_string","","Converts a single known host to a single line of output for storage,\nusing the 'type' output format.",18],[10,"iter","","Create an iterator over all of the known hosts in this structure.",18],[10,"remove","","Delete a known host entry from the collection of known hosts.",18],[10,"check","","Checks a host and its associated key against the collection of known\nhosts, and returns info back about the (partially) matched entry.",18],[10,"check_port","","Same as `check`, but takes a port as well.",18],[10,"add","","Adds a known host to the collection of known hosts.",18],[10,"drop","","",18],[10,"next","","",19],[10,"from_raw","","Creates a new host from its raw counterpart.",20],[10,"name","","This is `None` if no plain text host name exists.",20],[10,"key","","Returns the key in base64/printable format",20],[10,"raw","","Gain access to the underlying raw pointer",20],[10,"from_raw","","Wraps a raw pointer in a new Listener structure tied to the lifetime of the\ngiven session.",21],[10,"accept","","Accept a queued connection from this listener.",21],[10,"drop","","",21],[10,"new","","Initializes an SSH session object.",22],[10,"from_raw","","Takes ownership of the given raw pointer and wraps it in a session.",22],[10,"banner","","Get the remote banner",22],[10,"banner_bytes","","See `banner`.",22],[10,"set_banner","","Set the SSH protocol banner for the local client",22],[10,"disconnect","","Terminate the transport layer.",22],[10,"flag","","Enable or disable a flag for this session.",22],[10,"is_blocking","","Returns whether the session was previously set to nonblocking.",22],[10,"set_blocking","","Set or clear blocking mode on session",22],[10,"timeout","","Returns the timeout, in milliseconds, for how long blocking calls may\nwait until they time out.",22],[10,"set_timeout","","Set timeout for blocking functions.",22],[10,"host_key","","Get the remote key.",22],[10,"host_key_hash","","Returns the computed digest of the remote system's hostkey.",22],[10,"method_pref","","Set preferred key exchange method",22],[10,"methods","","Return the currently active algorithms.",22],[10,"supported_algs","","Get list of supported algorithms.",22],[10,"agent","","Init an ssh-agent handle.",22],[10,"handshake","","Begin transport layer protocol negotiation with the connected host.",22],[10,"channel_open","","Allocate a new channel for exchanging data with the server.",22],[10,"channel_session","","Establish a new session-based channel.",22],[10,"channel_direct_tcpip","","Tunnel a TCP connection through an SSH session.",22],[10,"channel_forward_listen","","Instruct the remote SSH server to begin listening for inbound TCP/IP\nconnections.",22],[10,"userauth_password","","Attempt basic password authentication.",22],[10,"userauth_pubkey_file","","Attempt public key authentication using a PEM encoded private key file\nstored on disk.",22],[10,"userauth_hostbased_file","","Umm... I wish this were documented in libssh2?",22],[10,"authenticated","","Indicates whether or not the named session has been successfully\nauthenticated.",22],[10,"auth_methods","","Send a SSH_USERAUTH_NONE request to the remote host.",22],[10,"keepalive_set","","Set how often keepalive messages should be sent.",22],[10,"keepalive_send","","Send a keepalive message if needed.",22],[10,"known_hosts","","Init a collection of known hosts for this session.",22],[10,"scp_recv","","Request a file from the remote host via SCP.",22],[10,"scp_send","","Send a file to the remote host via SCP.",22],[10,"sftp","","Open a channel and initialize the SFTP subsystem.",22],[10,"raw","","Gain access to the underlying raw libssh2 session pointer.",22],[10,"rc","","Translate a return code into a Rust-`Result`.",22],[10,"drop","","",22],[10,"hash","","",23],[10,"cmp","","",23],[10,"partial_cmp","","",23],[10,"lt","","",23],[10,"le","","",23],[10,"gt","","",23],[10,"ge","","",23],[10,"clone","","",23],[10,"eq","","",23],[10,"ne","","",23],[10,"empty","","Returns an empty set of flags.",23],[10,"all","","Returns the set containing all flags.",23],[10,"bits","","Returns the raw value of the flags currently stored.",23],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",23],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",23],[10,"is_empty","","Returns `true` if no flags are currently stored.",23],[10,"is_all","","Returns `true` if all flags are currently set.",23],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",23],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",23],[10,"insert","","Inserts the specified flags in-place.",23],[10,"remove","","Removes the specified flags in-place.",23],[10,"toggle","","Toggles the specified flags in-place.",23],[10,"bitor","","Returns the union of the two sets of flags.",23],[10,"bitxor","","Returns the left flags, but with all the right flags toggled.",23],[10,"bitand","","Returns the intersection between the two sets of flags.",23],[10,"sub","","Returns the set difference of the two sets of flags.",23],[10,"not","","Returns the complement of this set of flags.",23],[10,"hash","","",24],[10,"cmp","","",24],[10,"partial_cmp","","",24],[10,"lt","","",24],[10,"le","","",24],[10,"gt","","",24],[10,"ge","","",24],[10,"clone","","",24],[10,"eq","","",24],[10,"ne","","",24],[10,"empty","","Returns an empty set of flags.",24],[10,"all","","Returns the set containing all flags.",24],[10,"bits","","Returns the raw value of the flags currently stored.",24],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",24],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",24],[10,"is_empty","","Returns `true` if no flags are currently stored.",24],[10,"is_all","","Returns `true` if all flags are currently set.",24],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",24],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",24],[10,"insert","","Inserts the specified flags in-place.",24],[10,"remove","","Removes the specified flags in-place.",24],[10,"toggle","","Toggles the specified flags in-place.",24],[10,"bitor","","Returns the union of the two sets of flags.",24],[10,"bitxor","","Returns the left flags, but with all the right flags toggled.",24],[10,"bitand","","Returns the intersection between the two sets of flags.",24],[10,"sub","","Returns the set difference of the two sets of flags.",24],[10,"not","","Returns the complement of this set of flags.",24],[10,"from_raw","","Wraps a raw pointer in a new Sftp structure tied to the lifetime of the\ngiven session.",25],[10,"open_mode","","Open a handle to a file.",25],[10,"open","","Helper to open a file in the `Read` mode.",25],[10,"create","","Helper to create a file in write-only mode with truncation.",25],[10,"opendir","","Helper to open a directory for reading its contents.",25],[10,"readdir","","Convenience function to read the files in a directory.",25],[10,"mkdir","","Create a directory on the remote file system.",25],[10,"rmdir","","Remove a directory from the remote file system.",25],[10,"stat","","Get the metadata for a file, performed by stat(2)",25],[10,"lstat","","Get the metadata for a file, performed by lstat(2)",25],[10,"setstat","","Set the metadata for a file.",25],[10,"symlink","","Create a symlink at `target` pointing at `path`.",25],[10,"readlink","","Read a symlink at `path`.",25],[10,"realpath","","Resolve the real path for `path`.",25],[10,"rename","","Rename a filesystem object on the remote filesystem.",25],[10,"last_error","","Peel off the last error to happen on this SFTP instance.",25],[10,"rc","","Translates a return code into a Rust-`Result`",25],[10,"drop","","",25],[10,"from_raw","","Wraps a raw pointer in a new File structure tied to the lifetime of the\ngiven session.",26],[10,"setstat","","Set the metadata for this handle.",26],[10,"stat","","Get the metadata for this handle.",26],[10,"statvfs","","",26],[10,"readdir","","Reads a block of data from a handle and returns file entry information\nfor the next entry, if any.",26],[10,"fsync","","This function causes the remote server to synchronize the file data and\nmetadata to disk (like fsync(2)).",26],[10,"read","","",26],[10,"write","","",26],[10,"tell","","",26],[10,"seek","","Move the file handle's internal pointer to an arbitrary location.",26],[10,"drop","","",26],[10,"from_raw","","Creates a new instance of a stat from a raw instance.",3],[10,"raw","","Convert this stat structure to its raw representation.",3],[5,"FLUSH_EXTENDED_DATA","","When passed to `Channel::flush_stream`, flushes all extended data\nsubstreams."],[5,"FLUSH_ALL","","When passed to `Channel::flush_stream`, flushes all substream."],[5,"EXTENDED_DATA_STDERR","","Stream ID of the stderr channel for stream-related methods on `Channel`"],[18,"READ","","Open the file for reading."],[18,"WRITE","","Open the file for writing. If both this and Read are specified, the file is opened for both reading and writing"],[18,"APPEND","","Force all writes to append data at the end of the file."],[18,"CREATE","","If this flag is specified, then a new file will be created if one does not already exist (if Truncate is specified, the new file will be truncated to zero length if it previously exists)"],[18,"TRUNCATE","","Forces an existing file with the same name to be truncated to zero length when creating a file by specifying `Create`. Using this flag implies the `Create` flag."],[18,"EXCLUSIVE","","Causes the request to fail if the named file already exists. Using this flag implies the `Create` flag."],[18,"ATOMIC","","Inform the remote that an atomic rename operation is desired if available"],[18,"OVERWRITE","","In a rename operation, overwrite the destination if it already exists. If this flag is not present then it is an error if the destination already exists"],[18,"NATIVE","","Inform the remote end that the native system calls for renaming should be used"]],"paths":[[1,"ExitSignal"],[1,"ReadWindow"],[1,"WriteWindow"],[1,"FileStat"],[2,"OpenType"],[2,"DisconnectCode"],[2,"SessionFlag"],[2,"HostKeyType"],[2,"MethodType"],[2,"HashType"],[2,"KnownHostFileKind"],[2,"CheckResult"],[2,"KnownHostKeyFormat"],[1,"Agent"],[1,"Identities"],[1,"PublicKey"],[1,"Channel"],[1,"Error"],[1,"KnownHosts"],[1,"Hosts"],[1,"Host"],[1,"Listener"],[1,"Session"],[1,"OpenFlags"],[1,"RenameFlags"],[1,"Sftp"],[1,"File"]]};
searchIndex['libssh2-sys'] = {"items":[[0,"","libssh2-sys",""],[1,"libssh2_agent_publickey","",""],[11,"magic","","",0],[11,"node","","",0],[11,"blob","","",0],[11,"blob_len","","",0],[11,"comment","","",0],[1,"libssh2_knownhost","",""],[11,"magic","","",1],[11,"node","","",1],[11,"name","","",1],[11,"key","","",1],[11,"typemask","","",1],[1,"LIBSSH2_SFTP_ATTRIBUTES","",""],[11,"flags","","",2],[11,"filesize","","",2],[11,"uid","","",2],[11,"gid","","",2],[11,"permissions","","",2],[11,"atime","","",2],[11,"mtime","","",2],[1,"LIBSSH2_SFTP_STATVFS","",""],[11,"f_bsize","","",3],[11,"f_frsize","","",3],[11,"f_blocks","","",3],[11,"f_bfree","","",3],[11,"f_bavail","","",3],[11,"f_files","","",3],[11,"f_ffree","","",3],[11,"f_favail","","",3],[11,"f_fsid","","",3],[11,"f_flag","","",3],[11,"f_namemax","","",3],[2,"LIBSSH2_SESSION","",""],[2,"LIBSSH2_AGENT","",""],[2,"LIBSSH2_CHANNEL","",""],[2,"LIBSSH2_LISTENER","",""],[2,"LIBSSH2_KNOWNHOSTS","",""],[2,"LIBSSH2_SFTP","",""],[2,"LIBSSH2_SFTP_HANDLE","",""],[3,"issue_14344_workaround","",""],[3,"libssh2_init","",""],[3,"libssh2_exit","",""],[3,"libssh2_free","",""],[3,"libssh2_hostkey_hash","",""],[3,"libssh2_session_init_ex","",""],[3,"libssh2_session_free","",""],[3,"libssh2_session_banner_get","",""],[3,"libssh2_session_banner_set","",""],[3,"libssh2_session_disconnect_ex","",""],[3,"libssh2_session_flag","",""],[3,"libssh2_session_get_blocking","",""],[3,"libssh2_session_get_timeout","",""],[3,"libssh2_session_hostkey","",""],[3,"libssh2_session_method_pref","",""],[3,"libssh2_session_methods","",""],[3,"libssh2_session_set_blocking","",""],[3,"libssh2_session_set_timeout","",""],[3,"libssh2_session_supported_algs","",""],[3,"libssh2_session_last_error","",""],[3,"libssh2_session_handshake","",""],[3,"libssh2_keepalive_config","",""],[3,"libssh2_keepalive_send","",""],[3,"libssh2_agent_init","",""],[3,"libssh2_agent_free","",""],[3,"libssh2_agent_connect","",""],[3,"libssh2_agent_disconnect","",""],[3,"libssh2_agent_list_identities","",""],[3,"libssh2_agent_get_identity","",""],[3,"libssh2_agent_userauth","",""],[3,"libssh2_channel_free","",""],[3,"libssh2_channel_close","",""],[3,"libssh2_channel_wait_closed","",""],[3,"libssh2_channel_wait_eof","",""],[3,"libssh2_channel_eof","",""],[3,"libssh2_channel_process_startup","",""],[3,"libssh2_channel_flush_ex","",""],[3,"libssh2_channel_write_ex","",""],[3,"libssh2_channel_get_exit_signal","",""],[3,"libssh2_channel_get_exit_status","",""],[3,"libssh2_channel_open_ex","",""],[3,"libssh2_channel_read_ex","",""],[3,"libssh2_channel_setenv_ex","",""],[3,"libssh2_channel_send_eof","",""],[3,"libssh2_channel_request_pty_ex","",""],[3,"libssh2_channel_request_pty_size_ex","",""],[3,"libssh2_channel_window_read_ex","",""],[3,"libssh2_channel_window_write_ex","",""],[3,"libssh2_channel_receive_window_adjust2","",""],[3,"libssh2_channel_direct_tcpip_ex","",""],[3,"libssh2_channel_forward_accept","",""],[3,"libssh2_channel_forward_cancel","",""],[3,"libssh2_channel_forward_listen_ex","",""],[3,"libssh2_userauth_authenticated","",""],[3,"libssh2_userauth_list","",""],[3,"libssh2_userauth_hostbased_fromfile_ex","",""],[3,"libssh2_userauth_publickey_fromfile_ex","",""],[3,"libssh2_userauth_password_ex","",""],[3,"libssh2_knownhost_free","",""],[3,"libssh2_knownhost_addc","",""],[3,"libssh2_knownhost_check","",""],[3,"libssh2_knownhost_checkp","",""],[3,"libssh2_knownhost_del","",""],[3,"libssh2_knownhost_get","",""],[3,"libssh2_knownhost_readfile","",""],[3,"libssh2_knownhost_readline","",""],[3,"libssh2_knownhost_writefile","",""],[3,"libssh2_knownhost_writeline","",""],[3,"libssh2_knownhost_init","",""],[3,"libssh2_scp_recv","",""],[3,"libssh2_scp_send64","",""],[3,"libssh2_sftp_init","",""],[3,"libssh2_sftp_shutdown","",""],[3,"libssh2_sftp_last_error","",""],[3,"libssh2_sftp_open_ex","",""],[3,"libssh2_sftp_close_handle","",""],[3,"libssh2_sftp_mkdir_ex","",""],[3,"libssh2_sftp_fsync","",""],[3,"libssh2_sftp_fstat_ex","",""],[3,"libssh2_sftp_fstatvfs","",""],[3,"libssh2_sftp_stat_ex","",""],[3,"libssh2_sftp_read","",""],[3,"libssh2_sftp_symlink_ex","",""],[3,"libssh2_sftp_rename_ex","",""],[3,"libssh2_sftp_rmdir_ex","",""],[3,"libssh2_sftp_write","",""],[3,"libssh2_sftp_tell64","",""],[3,"libssh2_sftp_seek64","",""],[3,"libssh2_sftp_readdir_ex","",""],[4,"LIBSSH2_ALLOC_FUNC","",""],[4,"LIBSSH2_FREE_FUNC","",""],[4,"LIBSSH2_REALLOC_FUNC","",""],[4,"LIBSSH2_PASSWD_CHANGEREQ_FUNC","",""],[4,"libssh2_socket_t","",""],[18,"SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT","",""],[18,"SSH_DISCONNECT_PROTOCOL_ERROR","",""],[18,"SSH_DISCONNECT_KEY_EXCHANGE_FAILED","",""],[18,"SSH_DISCONNECT_RESERVED","",""],[18,"SSH_DISCONNECT_MAC_ERROR","",""],[18,"SSH_DISCONNECT_COMPRESSION_ERROR","",""],[18,"SSH_DISCONNECT_SERVICE_NOT_AVAILABLE","",""],[18,"SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED","",""],[18,"SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE","",""],[18,"SSH_DISCONNECT_CONNECTION_LOST","",""],[18,"SSH_DISCONNECT_BY_APPLICATION","",""],[18,"SSH_DISCONNECT_TOO_MANY_CONNECTIONS","",""],[18,"SSH_DISCONNECT_AUTH_CANCELLED_BY_USER","",""],[18,"SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE","",""],[18,"SSH_DISCONNECT_ILLEGAL_USER_NAME","",""],[18,"LIBSSH2_FLAG_SIGPIPE","",""],[18,"LIBSSH2_FLAG_COMPRESS","",""],[18,"LIBSSH2_HOSTKEY_TYPE_UNKNOWN","",""],[18,"LIBSSH2_HOSTKEY_TYPE_RSA","",""],[18,"LIBSSH2_HOSTKEY_TYPE_DSS","",""],[18,"LIBSSH2_METHOD_KEX","",""],[18,"LIBSSH2_METHOD_HOSTKEY","",""],[18,"LIBSSH2_METHOD_CRYPT_CS","",""],[18,"LIBSSH2_METHOD_CRYPT_SC","",""],[18,"LIBSSH2_METHOD_MAC_CS","",""],[18,"LIBSSH2_METHOD_MAC_SC","",""],[18,"LIBSSH2_METHOD_COMP_CS","",""],[18,"LIBSSH2_METHOD_COMP_SC","",""],[18,"LIBSSH2_METHOD_LANG_CS","",""],[18,"LIBSSH2_METHOD_LANG_SC","",""],[18,"LIBSSH2_CHANNEL_PACKET_DEFAULT","",""],[18,"LIBSSH2_CHANNEL_WINDOW_DEFAULT","",""],[18,"LIBSSH2_ERROR_BANNER_RECV","",""],[18,"LIBSSH2_ERROR_BANNER_SEND","",""],[18,"LIBSSH2_ERROR_INVALID_MAC","",""],[18,"LIBSSH2_ERROR_KEX_FAILURE","",""],[18,"LIBSSH2_ERROR_ALLOC","",""],[18,"LIBSSH2_ERROR_SOCKET_SEND","",""],[18,"LIBSSH2_ERROR_KEY_EXCHANGE_FAILURE","",""],[18,"LIBSSH2_ERROR_TIMEOUT","",""],[18,"LIBSSH2_ERROR_HOSTKEY_INIT","",""],[18,"LIBSSH2_ERROR_HOSTKEY_SIGN","",""],[18,"LIBSSH2_ERROR_DECRYPT","",""],[18,"LIBSSH2_ERROR_SOCKET_DISCONNECT","",""],[18,"LIBSSH2_ERROR_PROTO","",""],[18,"LIBSSH2_ERROR_PASSWORD_EXPIRED","",""],[18,"LIBSSH2_ERROR_FILE","",""],[18,"LIBSSH2_ERROR_METHOD_NONE","",""],[18,"LIBSSH2_ERROR_AUTHENTICATION_FAILED","",""],[18,"LIBSSH2_ERROR_PUBLICKEY_UNRECOGNIZED","",""],[18,"LIBSSH2_ERROR_PUBLICKEY_UNVERIFIED","",""],[18,"LIBSSH2_ERROR_CHANNEL_OUTOFORDER","",""],[18,"LIBSSH2_ERROR_CHANNEL_FAILURE","",""],[18,"LIBSSH2_ERROR_CHANNEL_REQUEST_DENIED","",""],[18,"LIBSSH2_ERROR_CHANNEL_UNKNOWN","",""],[18,"LIBSSH2_ERROR_CHANNEL_WINDOW_EXCEEDED","",""],[18,"LIBSSH2_ERROR_CHANNEL_PACKET_EXCEEDED","",""],[18,"LIBSSH2_ERROR_CHANNEL_CLOSED","",""],[18,"LIBSSH2_ERROR_CHANNEL_EOF_SENT","",""],[18,"LIBSSH2_ERROR_SCP_PROTOCOL","",""],[18,"LIBSSH2_ERROR_ZLIB","",""],[18,"LIBSSH2_ERROR_SOCKET_TIMEOUT","",""],[18,"LIBSSH2_ERROR_SFTP_PROTOCOL","",""],[18,"LIBSSH2_ERROR_REQUEST_DENIED","",""],[18,"LIBSSH2_ERROR_METHOD_NOT_SUPPORTED","",""],[18,"LIBSSH2_ERROR_INVAL","",""],[18,"LIBSSH2_ERROR_INVALID_POLL_TYPE","",""],[18,"LIBSSH2_ERROR_PUBLICKEY_PROTOCOL","",""],[18,"LIBSSH2_ERROR_EAGAIN","",""],[18,"LIBSSH2_ERROR_BUFFER_TOO_SMALL","",""],[18,"LIBSSH2_ERROR_BAD_USE","",""],[18,"LIBSSH2_ERROR_COMPRESS","",""],[18,"LIBSSH2_ERROR_OUT_OF_BOUNDARY","",""],[18,"LIBSSH2_ERROR_AGENT_PROTOCOL","",""],[18,"LIBSSH2_ERROR_SOCKET_RECV","",""],[18,"LIBSSH2_ERROR_ENCRYPT","",""],[18,"LIBSSH2_ERROR_BAD_SOCKET","",""],[18,"LIBSSH2_ERROR_KNOWN_HOSTS","",""],[18,"LIBSSH2_HOSTKEY_HASH_MD5","",""],[18,"LIBSSH2_HOSTKEY_HASH_SHA1","",""],[18,"LIBSSH2_KNOWNHOST_FILE_OPENSSH","",""],[18,"LIBSSH2_KNOWNHOST_CHECK_MATCH","",""],[18,"LIBSSH2_KNOWNHOST_CHECK_MISMATCH","",""],[18,"LIBSSH2_KNOWNHOST_CHECK_NOTFOUND","",""],[18,"LIBSSH2_KNOWNHOST_CHECK_FAILURE","",""],[18,"LIBSSH2_KNOWNHOST_TYPE_PLAIN","",""],[18,"LIBSSH2_KNOWNHOST_TYPE_SHA1","",""],[18,"LIBSSH2_KNOWNHOST_TYPE_CUSTOM","",""],[18,"LIBSSH2_KNOWNHOST_KEYENC_RAW","",""],[18,"LIBSSH2_KNOWNHOST_KEYENC_BASE64","",""],[18,"LIBSSH2_KNOWNHOST_KEY_RSA1","",""],[18,"LIBSSH2_KNOWNHOST_KEY_SSHRSA","",""],[18,"LIBSSH2_KNOWNHOST_KEY_SSHDSS","",""],[18,"LIBSSH2_KNOWNHOST_KEY_UNKNOWN","",""],[18,"LIBSSH2_FXF_READ","",""],[18,"LIBSSH2_FXF_WRITE","",""],[18,"LIBSSH2_FXF_APPEND","",""],[18,"LIBSSH2_FXF_CREAT","",""],[18,"LIBSSH2_FXF_TRUNC","",""],[18,"LIBSSH2_FXF_EXCL","",""],[18,"LIBSSH2_SFTP_OPENFILE","",""],[18,"LIBSSH2_SFTP_OPENDIR","",""],[18,"LIBSSH2_SFTP_ATTR_SIZE","",""],[18,"LIBSSH2_SFTP_ATTR_UIDGID","",""],[18,"LIBSSH2_SFTP_ATTR_PERMISSIONS","",""],[18,"LIBSSH2_SFTP_ATTR_ACMODTIME","",""],[18,"LIBSSH2_SFTP_ATTR_EXTENDED","",""],[18,"LIBSSH2_SFTP_STAT","",""],[18,"LIBSSH2_SFTP_LSTAT","",""],[18,"LIBSSH2_SFTP_SETSTAT","",""],[18,"LIBSSH2_SFTP_SYMLINK","",""],[18,"LIBSSH2_SFTP_READLINK","",""],[18,"LIBSSH2_SFTP_REALPATH","",""],[18,"LIBSSH2_SFTP_RENAME_OVERWRITE","",""],[18,"LIBSSH2_SFTP_RENAME_ATOMIC","",""],[18,"LIBSSH2_SFTP_RENAME_NATIVE","",""]],"paths":[[1,"libssh2_agent_publickey"],[1,"libssh2_knownhost"],[1,"LIBSSH2_SFTP_ATTRIBUTES"],[1,"LIBSSH2_SFTP_STATVFS"]]};

searchIndex['openssl-sys'] = {"items":[[0,"","openssl-sys",""],[1,"EVP_MD_CTX","",""],[1,"HMAC_CTX","",""],[1,"X509V3_CTX","",""],[1,"BIGNUM","",""],[11,"d","","",0],[11,"top","","",0],[11,"dmax","","",0],[11,"neg","","",0],[11,"flags","","",0],[3,"init","",""],[3,"BIO_eof","",""],[3,"ASN1_INTEGER_set","",""],[3,"ASN1_STRING_type_new","",""],[3,"ASN1_TIME_free","",""],[3,"BIO_ctrl","",""],[3,"BIO_free_all","",""],[3,"BIO_new","",""],[3,"BIO_read","",""],[3,"BIO_write","",""],[3,"BIO_s_mem","",""],[3,"BN_new","",""],[3,"BN_dup","",""],[3,"BN_clear_free","",""],[3,"BN_CTX_new","",""],[3,"BN_CTX_free","",""],[3,"BN_num_bits","",""],[3,"BN_set_negative","",""],[3,"BN_set_word","",""],[3,"BN_add","",""],[3,"BN_div","",""],[3,"BN_exp","",""],[3,"BN_gcd","",""],[3,"BN_mod_add","",""],[3,"BN_mod_exp","",""],[3,"BN_mod_inverse","",""],[3,"BN_mod_mul","",""],[3,"BN_mod_sqr","",""],[3,"BN_mod_sub","",""],[3,"BN_mul","",""],[3,"BN_nnmod","",""],[3,"BN_sqr","",""],[3,"BN_sub","",""],[3,"BN_clear_bit","",""],[3,"BN_is_bit_set","",""],[3,"BN_lshift","",""],[3,"BN_lshift1","",""],[3,"BN_mask_bits","",""],[3,"BN_rshift","",""],[3,"BN_set_bit","",""],[3,"BN_rshift1","",""],[3,"BN_cmp","",""],[3,"BN_ucmp","",""],[3,"BN_generate_prime_ex","",""],[3,"BN_is_prime_ex","",""],[3,"BN_is_prime_fasttest_ex","",""],[3,"BN_rand","",""],[3,"BN_pseudo_rand","",""],[3,"BN_rand_range","",""],[3,"BN_pseudo_rand_range","",""],[3,"BN_bin2bn","",""],[3,"BN_bn2bin","",""],[3,"BN_bn2dec","",""],[3,"CRYPTO_num_locks","",""],[3,"CRYPTO_set_locking_callback","",""],[3,"CRYPTO_free","",""],[3,"CRYPTO_memcmp","",""],[3,"ERR_get_error","",""],[3,"ERR_lib_error_string","",""],[3,"ERR_func_error_string","",""],[3,"ERR_reason_error_string","",""],[3,"ERR_load_crypto_strings","",""],[3,"EVP_md5","",""],[3,"EVP_ripemd160","",""],[3,"EVP_sha1","",""],[3,"EVP_sha224","",""],[3,"EVP_sha256","",""],[3,"EVP_sha384","",""],[3,"EVP_sha512","",""],[3,"EVP_aes_128_cbc","",""],[3,"EVP_aes_128_ecb","",""],[3,"EVP_aes_256_cbc","",""],[3,"EVP_aes_256_ecb","",""],[3,"EVP_rc4","",""],[3,"EVP_CIPHER_CTX_new","",""],[3,"EVP_CIPHER_CTX_set_padding","",""],[3,"EVP_CIPHER_CTX_free","",""],[3,"EVP_CipherInit","",""],[3,"EVP_CipherUpdate","",""],[3,"EVP_CipherFinal","",""],[3,"EVP_DigestInit","",""],[3,"EVP_DigestInit_ex","",""],[3,"EVP_DigestUpdate","",""],[3,"EVP_DigestFinal","",""],[3,"EVP_DigestFinal_ex","",""],[3,"EVP_MD_CTX_create","",""],[3,"EVP_MD_CTX_destroy","",""],[3,"EVP_PKEY_new","",""],[3,"EVP_PKEY_free","",""],[3,"EVP_PKEY_assign","",""],[3,"EVP_PKEY_get1_RSA","",""],[3,"EVP_PKEY_set1_RSA","",""],[3,"HMAC_CTX_init","",""],[3,"HMAC_Init_ex","",""],[3,"HMAC_Final","",""],[3,"HMAC_Update","",""],[3,"HMAC_CTX_cleanup","",""],[3,"PEM_read_bio_X509","",""],[3,"PEM_write_bio_PrivateKey","",""],[3,"PEM_write_bio_X509","",""],[3,"PKCS5_PBKDF2_HMAC_SHA1","",""],[3,"RAND_bytes","",""],[3,"RSA_generate_key","",""],[3,"RSA_private_decrypt","",""],[3,"RSA_public_encrypt","",""],[3,"RSA_sign","",""],[3,"RSA_size","",""],[3,"RSA_verify","",""],[3,"SSL_library_init","",""],[3,"SSL_load_error_strings","",""],[3,"SSLv3_method","",""],[3,"TLSv1_method","",""],[3,"SSLv23_method","",""],[3,"SSL_new","",""],[3,"SSL_free","",""],[3,"SSL_set_bio","",""],[3,"SSL_get_rbio","",""],[3,"SSL_get_wbio","",""],[3,"SSL_accept","",""],[3,"SSL_connect","",""],[3,"SSL_ctrl","",""],[3,"SSL_get_error","",""],[3,"SSL_read","",""],[3,"SSL_write","",""],[3,"SSL_get_ex_data_X509_STORE_CTX_idx","",""],[3,"SSL_get_SSL_CTX","",""],[3,"SSL_get_current_compression","",""],[3,"SSL_get_peer_certificate","",""],[3,"SSL_COMP_get_name","",""],[3,"SSL_CTX_new","",""],[3,"SSL_CTX_free","",""],[3,"SSL_CTX_set_verify","",""],[3,"SSL_CTX_set_verify_depth","",""],[3,"SSL_CTX_load_verify_locations","",""],[3,"SSL_CTX_get_ex_new_index","",""],[3,"SSL_CTX_set_ex_data","",""],[3,"SSL_CTX_get_ex_data","",""],[3,"SSL_CTX_use_certificate_file","",""],[3,"SSL_CTX_use_PrivateKey_file","",""],[3,"SSL_CTX_set_cipher_list","",""],[3,"X509_add_ext","",""],[3,"X509_digest","",""],[3,"X509_free","",""],[3,"X509_get_serialNumber","",""],[3,"X509_get_subject_name","",""],[3,"X509_gmtime_adj","",""],[3,"X509_new","",""],[3,"X509_set_issuer_name","",""],[3,"X509_set_notAfter","",""],[3,"X509_set_notBefore","",""],[3,"X509_set_version","",""],[3,"X509_set_pubkey","",""],[3,"X509_sign","",""],[3,"X509_EXTENSION_free","",""],[3,"X509_NAME_add_entry_by_txt","",""],[3,"X509_NAME_get_index_by_NID","",""],[3,"X509_NAME_get_entry","",""],[3,"X509_NAME_ENTRY_get_data","",""],[3,"ASN1_STRING_to_UTF8","",""],[3,"X509_STORE_CTX_get_current_cert","",""],[3,"X509_STORE_CTX_get_error","",""],[3,"X509_STORE_CTX_get_ex_data","",""],[3,"X509V3_EXT_conf_nid","",""],[3,"X509V3_set_ctx","",""],[3,"i2d_RSA_PUBKEY","",""],[3,"d2i_RSA_PUBKEY","",""],[3,"i2d_RSAPrivateKey","",""],[3,"d2i_RSAPrivateKey","",""],[0,"probe","",""],[1,"ProbeResult","openssl-sys::probe",""],[11,"cert_file","","",1],[11,"cert_dir","","",1],[3,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound."],[3,"init_ssl_cert_env_vars","",""],[3,"probe","",""],[4,"ASN1_INTEGER","openssl-sys",""],[4,"ASN1_STRING","",""],[4,"ASN1_TIME","",""],[4,"BIO","",""],[4,"BIO_METHOD","",""],[4,"BN_CTX","",""],[4,"COMP_METHOD","",""],[4,"CRYPTO_EX_DATA","",""],[4,"ENGINE","",""],[4,"EVP_CIPHER","",""],[4,"EVP_CIPHER_CTX","",""],[4,"EVP_MD","",""],[4,"EVP_PKEY","",""],[4,"EVP_PKEY_CTX","",""],[4,"RSA","",""],[4,"SSL","",""],[4,"SSL_CTX","",""],[4,"SSL_METHOD","",""],[4,"X509","",""],[4,"X509_CRL","",""],[4,"X509_EXTENSION","",""],[4,"X509_NAME","",""],[4,"X509_NAME_ENTRY","",""],[4,"X509_REQ","",""],[4,"X509_STORE_CTX","",""],[4,"CRYPTO_EX_new","",""],[4,"CRYPTO_EX_dup","",""],[4,"CRYPTO_EX_free","",""],[4,"PasswordCallback","",""],[18,"BIO_CTRL_EOF","",""],[18,"CRYPTO_LOCK","",""],[18,"MBSTRING_ASC","",""],[18,"MBSTRING_BMP","",""],[18,"MBSTRING_FLAG","",""],[18,"MBSTRING_UNIV","",""],[18,"MBSTRING_UTF8","",""],[18,"NID_ext_key_usage","",""],[18,"NID_key_usage","",""],[18,"SSL_CTRL_SET_TLSEXT_HOSTNAME","",""],[18,"SSL_ERROR_NONE","",""],[18,"SSL_ERROR_SSL","",""],[18,"SSL_ERROR_SYSCALL","",""],[18,"SSL_ERROR_WANT_ACCEPT","",""],[18,"SSL_ERROR_WANT_CONNECT","",""],[18,"SSL_ERROR_WANT_READ","",""],[18,"SSL_ERROR_WANT_WRITE","",""],[18,"SSL_ERROR_WANT_X509_LOOKUP","",""],[18,"SSL_ERROR_ZERO_RETURN","",""],[18,"SSL_VERIFY_NONE","",""],[18,"SSL_VERIFY_PEER","",""],[18,"TLSEXT_NAMETYPE_host_name","",""],[18,"V_ASN1_GENERALIZEDTIME","",""],[18,"V_ASN1_UTCTIME","",""],[18,"X509_FILETYPE_ASN1","",""],[18,"X509_FILETYPE_DEFAULT","",""],[18,"X509_FILETYPE_PEM","",""],[18,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","",""],[18,"X509_V_ERR_AKID_SKID_MISMATCH","",""],[18,"X509_V_ERR_APPLICATION_VERIFICATION","",""],[18,"X509_V_ERR_CERT_CHAIN_TOO_LONG","",""],[18,"X509_V_ERR_CERT_HAS_EXPIRED","",""],[18,"X509_V_ERR_CERT_NOT_YET_VALID","",""],[18,"X509_V_ERR_CERT_REJECTED","",""],[18,"X509_V_ERR_CERT_REVOKED","",""],[18,"X509_V_ERR_CERT_SIGNATURE_FAILURE","",""],[18,"X509_V_ERR_CERT_UNTRUSTED","",""],[18,"X509_V_ERR_CRL_HAS_EXPIRED","",""],[18,"X509_V_ERR_CRL_NOT_YET_VALID","",""],[18,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","",""],[18,"X509_V_ERR_CRL_SIGNATURE_FAILURE","",""],[18,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","",""],[18,"X509_V_ERR_DIFFERENT_CRL_SCOPE","",""],[18,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","",""],[18,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","",""],[18,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","",""],[18,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","",""],[18,"X509_V_ERR_EXCLUDED_VIOLATION","",""],[18,"X509_V_ERR_INVALID_CA","",""],[18,"X509_V_ERR_INVALID_EXTENSION","",""],[18,"X509_V_ERR_INVALID_NON_CA","",""],[18,"X509_V_ERR_INVALID_POLICY_EXTENSION","",""],[18,"X509_V_ERR_INVALID_PURPOSE","",""],[18,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","",""],[18,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","",""],[18,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","",""],[18,"X509_V_ERR_NO_EXPLICIT_POLICY","",""],[18,"X509_V_ERR_OUT_OF_MEM","",""],[18,"X509_V_ERR_PATH_LENGTH_EXCEEDED","",""],[18,"X509_V_ERR_PERMITTED_VIOLATION","",""],[18,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","",""],[18,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","",""],[18,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","",""],[18,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","",""],[18,"X509_V_ERR_SUBTREE_MINMAX","",""],[18,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","",""],[18,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","",""],[18,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","",""],[18,"X509_V_ERR_UNABLE_TO_GET_CRL","",""],[18,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","",""],[18,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","",""],[18,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","",""],[18,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","",""],[18,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","",""],[18,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","",""],[18,"X509_V_ERR_UNNESTED_RESOURCE","",""],[18,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","",""],[18,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","",""],[18,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","",""],[18,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","",""],[18,"X509_V_OK","",""]],"paths":[[1,"BIGNUM"],[1,"ProbeResult"]]};

searchIndex['libz-sys'] = {"items":[],"paths":[]};

searchIndex['pkg-config'] = {"items":[[0,"","pkg-config",""],[1,"Options","",""],[11,"statik","","",0],[11,"atleast_version","","",0],[3,"target_supported","",""],[3,"find_library","",""],[3,"find_library_opts","",""],[3,"default_options","",""]],"paths":[[1,"Options"]]};

initSearch(searchIndex);
